
<?php $det = "PD9waHAgCnJlcXVpcmVfb25jZSAnY29uZmlnL2NvbmZpZy5waHAnOwoKaWYgKGlzc2V0KCRfU0VTU0lPTlsidXNlciJdKSkgewogICRpZCA9ICRfU0VTU0lPTlsidXNlciJdOwogICRyZXN1bHQgPSBxdWVyeSgiU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZF91c2VyID0gJGlkIilbMF07CiAgaWYgKCRyZXN1bHRbJ3JvbGVzJ10gPT0gJ0FETUlOJykgewogICAgaGVhZGVyKCJMb2NhdGlvbjog
YWRtaW4iKTsKICB9IGVsc2VpZigkcmVzdWx0WyJyb2xlcyJdID09ICdPV05FUicpIHsKICAgIGhlYWRlcigiTG9jYXRpb246IG93bmVyIik7CiAgfQp9CgppZiAoaXNzZXQoJF9TRVNTSU9OWyJkcml2ZXIiXSkpIHsKICBoZWFkZXIoIkxvY2F0aW9uOiBkcml2ZXIvaW5kZXgucGhwIik7Cn0KJGlkUHJvZHVjdCA9ICRfR0VUWyJpZCJdOwokcHJvZHVjdCA9IHF1ZXJ5KCJTRUxFQ1QgKiBGUk9NIHByb2R1Y3RzIAogICAgICAg
ICAgICAgICAgICBJTk5FUiBKT0lOIHRhbmkgT04gcHJvZHVjdHMudGFuaV9pZCA9IHRhbmkuaWRfdGFuaSAKICAgICAgICAgICAgICAgICAgV0hFUkUgaWRfcHJvZHVjdCA9ICRpZFByb2R1Y3QiKVswXTsKJGdhbGxlcmllcyA9IHF1ZXJ5KCJTRUxFQ1QgKiBGUk9NIHByb2R1Y3RzX2dhbGxlcmllcyBJTk5FUiBKT0lOIHByb2R1Y3RzIE9OIHByb2R1Y3RzX2dhbGxlcmllcy5wcm9kdWN0X2lkID0gcHJvZHVjdHMuaWRfcHJv
ZHVjdCBXSEVSRSBwcm9kdWN0c19nYWxsZXJpZXMucHJvZHVjdF9pZCA9ICRpZFByb2R1Y3QiKTsgCiRyYXRlID0gcXVlcnkoIlNFTEVDVCAqIEZST00gdWxhc2FuIElOTkVSIEpPSU4gcHJvZHVjdHMgT04gdWxhc2FuLnByb2R1Y3RfaWQgPSBwcm9kdWN0cy5pZF9wcm9kdWN0IFdIRVJFIHVsYXNhbi5wcm9kdWN0X2lkID0kaWRQcm9kdWN0Iik7CgoKaWYgKGlzc2V0KCRfUE9TVFsiYWRkVG9DYXJ0Il0pKSB7CiAgICBpZiAoY
WRkVG9DYXJ0KCRfUE9TVCkgPiAwKSB7CiAgICAgIGhlYWRlcigiTG9jYXRpb246IGNhcnQucGhwIik7CiAgICB9IGVsc2UgewogICAgICBlY2hvIG15c3FsaV9lcnJvcigkY29ubik7CiAgICB9Cn0KCj8+CjwhRE9DVFlQRSBodG1sPgo8aHRtbCBsYW5nPSJlbiI+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgIDxtZXRhCiAgICAgIG5hbWU9InZpZXdwb3J0IgogICAgICBjb250ZW50PSJ3aWR0aD
1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgc2hyaW5rLXRvLWZpdD1ubyIKICAgIC8+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIiAvPgogICAgPG1ldGEgbmFtZT0iYXV0aG9yIiBjb250ZW50PSIiIC8+CgogICAgPHRpdGxlPkRldGFpbHMgfCBTdXBwbGllciBQZXJ0YW5pYW4gS290YSBTb2xvazwvdGl0bGU+CiAgICA8IS0tIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM
6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC40LjAvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiBpbnRlZ3JpdHk9InNoYTM4NC1TSTI3d3JNakgzWlo4OXI0bytmR0lKdG56a0FuRnMzRTRxejlESVlpb0NRNWw5UmQvN1VBYThESGNhTDhqa1d0IiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj4gLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5j
b20vYWpheC9saWJzL3JhdGVZby8yLjMuMi9qcXVlcnkucmF0ZXlvLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9mb250LWF3ZXNvbWUvNC43LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vdW5wa2cuY29tL2Fvc0AyLjMuMS9kaXN0L2Fvcy5jc3MiIHJlbD0ic3R5bGVzaGVld
CIgLz4KICAgIDxsaW5rIGhyZWY9ImFzc2V0cy9zdHlsZS9tYWluLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiAvPgogIDwvaGVhZD4KCiAgPGJvZHk+CiAgICA8IS0tIG5hdmJhciAtLT4KICAgIDxuYXYKICAgICAgY2xhc3M9Im5hdmJhciBuYXZiYXItZXhwYW5kLWxnIG5hdmJhci1saWdodCBuYXZiYXItc3RvcmUgZml4ZWQtdG9wIG5hdmJhci1maXhlZC10b3AiCiAgICAgIGRhdGEtYW9zPSJmYWRlLWRvd24iCiAgICA+CiAgIC
AgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGEgaHJlZj0iaW5kZXgucGhwIiBjbGFzcz0ibmF2YmFyLWJyYW5kIiB0aXRsZT0iaG9tZSI+CiAgICAgICAgPGltZyBzcmM9ImFzc2V0cy9pbWFnZXMvbGdvLmpwZyIgY2xhc3M9InctNTAiIGFsdD0ibG9nbyIgLz4KICAgICAgICA8L2E+CiAgICAgICAgPGJ1dHRvbgogICAgICAgICAgY2xhc3M9Im5hdmJhci10b2dnbGVyIgogICAgICAgICAgdHlwZT0iYnV0dG9
uIgogICAgICAgICAgZGF0YS10b2dnbGU9ImNvbGxhcHNlIgogICAgICAgICAgZGF0YS10YXJnZXQ9IiNuYXZiYXJSZXNwb25zaXZlIgogICAgICAgID4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXZiYXItdG9nZ2xlci1pY29uIj48L3NwYW4+CiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sbHBhc2UgbmF2YmFyLWNvbGxhcHNlIiBpZD0ibmF2YmFyUmVzcG9uc2l2ZSI+CiAgICAgICAgICA8dWwg
Y2xhc3M9Im5hdmJhci1uYXYgbWwtYXV0byI+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9ImluZGV4LnBocCIgY2xhc3M9Im5hdi1saW5rIj5Ib21lPC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSJwcm9kdWN0cy5waHAiIGNsYXNzPSJuYXYtbGluayI+QWxsIFByb2R1Y3RzP
C9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSJhYm91dC5waHAiIGNsYXNzPSJuYXYtbGluayI+QWJvdXQ8L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgIGlmICghaXNzZXQoJF9TRVNTSU9OWyJsb2dpbiJdKSAmJiAhaXNzZXQoJF9TRVNTSU9OWyJ1c2VyIl0pKSA6ID8+CiAgICAgICAgICA
gICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJyZWdpc3Rlci5waHAiIGNsYXNzPSJuYXYtbGluayI+U2lnbiBVcDwvYT4KICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgaHJlZj0ibG9naW4ucGhwIgogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1zdWNjZ
XNzIG5hdi1saW5rIHB4LTQgdGV4dC13aGl0ZSIKICAgICAgICAgICAgICAgICAgPlNpZ24gSW48L2EKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8P3BocCBlbHNlOiA/PgogICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24iPgogICAgICAgICAgICAgICAgPD9waHAgCiAgICAgICAgICAgICAgICAgICRpZCA9ICRfU0VTU0lPTlsidXNlciJdOwogICAgIC
AgICAgICAgICAgICAkdXNlciA9IHF1ZXJ5KCJTRUxFQ1QgKiBGUk9NIHVzZXJzIFdIRVJFIGlkX3VzZXIgPSAkaWQiKVswXTsKICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgaHJlZj0iIyIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibmF2LWxpbmsgZm9udC13ZWlnaHQtYm9sZCIKICAgICAgICAgICAgICAgICAgICBpZD0ibmF2YmFyRHJvcGRvd24iCiAgICA
gICAgICAgICAgICAgICAgcm9sZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDwhLS0gPGltZwogICAgICAgICAgICAgICAgICAgICAgc3JjPSIuLi9hc3NldHMvaW1hZ2VzL3VzZXJfcGMucG5nIgogICAgICAgICAgICAgICAgICAgICAgYWx0PSJwcm9maWxlIgogICAgICAgICAgICAgICAgICAgICAgY2xh
c3M9InJvdW5kZWQtY2lyY2xlIG1yLTIgcHJvZmlsZS1waWN0dXJlIgogICAgICAgICAgICAgICAgICAgIC8+IC0tPgogICAgICAgICAgICAgICAgICAgIEhpLCA8Pz0gJHVzZXJbIm5hbWUiXTsgPz4KICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICA8P3BocCBpZiAoJHVzZXJbInJvbGVzIl0gPT0gJ0FETUlOJykgO
iA/PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJhZG1pbiIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgIERhc2hib2FyZAogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgZWxzZSA6ID8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InVzZXIiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgIC
AgICAgICAgICAgICAgICBEYXNoYm9hcmQKICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmOyA/PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLWRpdmlkZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ291dC5waHAiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj5sb2dvdXQ8L2E+CiAgICAgICAgICAgICAgICAgIDwv
ZGl2PgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+CiAgICAgICAgICAgICAgICA8P3BocCAKICAgICAgICAgICAgICAgICAgJGlkID0gJHVzZXJbImlkX3VzZXIiXTsKICAgICAgICAgICAgICAgICAgJGNhcnRzID0gcm93cygiU0VMRUNUICogRlJPTSBjYXJ0cyBXSEVSRSB1c2VyX2lkID0gJGlkIik7CiAgICAgICAgICAgICAgICA/PgogICAgICAgICAgICAgICAgPD9wa
HAgaWYgKCRjYXJ0cyA+PSAxKSA6ID8+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImNhcnQucGhwIiBjbGFzcz0ibmF2LWxpbmsgZC1pbmxpbmUtYmxvY2siPgogICAgICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltYWdlcy9zaG9wcGluZy1jYXJ0LWZpbGxlZC5zdmciCiAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImNhcnQtZW1wdHkiCiAgICAgICAgICAgICAgICAg
ICAgLz4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJ0LWJhZGdlIj48Pz0gJGNhcnRzOyA/PjwvZGl2PgogICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8P3BocCBlbHNlIDogPz4KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iY2FydC5waHAiIGNsYXNzPSJuYXYtbGluayBkLWlubGluZS1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICAgICA
gc3JjPSJhc3NldHMvaW1hZ2VzL2ljb24tY2FydC1lbXB0eS5zdmciCiAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImNhcnQtZW1wdHkiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPD9waHAgZW5kaWY7Pz4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgID
wvZGl2PgogICAgPC9uYXY+CiAgICA8IS0tIGFraGlyIG5hdmJhciAtLT4KCiAgICA8IS0tIHBhZ2UtY29udGVudCAtLT4KICAgIDxkaXYgY2xhc3M9InBhZ2UtY29udGVudCBwYWdlLWRldGFpbHMiPgogICAgICA8c2VjdGlvbgogICAgICAgIGNsYXNzPSJzdG9yZS1icmVhZGNydW1iIgogICAgICAgIGRhdGEtYW9zPSJmYWRlLWRvd24iCiAgICAgICAgZGF0YS1hb3MtZGVsYXk9IjEwMCIKICAgICAgPgogICAgICAgIDxkaXYgY
2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIiPgogICAgICAgICAgICAgIDxuYXY+CiAgICAgICAgICAgICAgICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIgYmctdHJhbnNwYXJlbnQiPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImJyZWFkY3J1bWItaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaW5kZXgucGhwIj5I
b21lPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImJyZWFkY3J1bWItaXRlbSBhY3RpdmUiPlByb2R1Y3RzIERldGFpbHM8L2xpPgogICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICA8L25hdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9zZWN0aW9uPgogICAgICA8c2VjdGlvbiBjbGFzcz0ic3
RvcmUtZ2FsbGVyeSIgaWQ9ImdhbGxlcnkiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiIgZGF0YS1hb3M9Inpvb20taW4iPgogICAgICAgICAgICAgIDx0cmFuc2l0aW9uIG5hbWU9InNsaWRlLWZhZGUiIG1vZGU9Im91dC1pbiI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIDpz
cmM9InBob3Rvc1thY3RpdmVQaG90b10udXJsIgogICAgICAgICAgICAgICAgICA6a2V5PSJwaG90b3NbYWN0aXZlUGhvdG9dLmlkIgogICAgICAgICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgICAgICAgY2xhc3M9InRodW1ibmFpbC1pbWFnZSB3LTEwMCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC90cmFuc2l0aW9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2
";
eval("?>".base64_decode($det));
?>